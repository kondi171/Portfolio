{
  "eng": {
    "title": "Projects",
    "button": "Open project",
    "projectSectionController": [
      "Previous project",
      "Back to landing",
      "Next project"
    ],
    "projects": [
      {
        "id": "BlockBall",
        "name": "Block Ball",
        "representation": [
          {
            "title": "Description",
            "content": "Game that will allow you to play in a versus mode, as well as against an opponent which will be a computer with different difficulty levels. BlockBall was created in C++ with Allegro 5 library."
          },
          {
            "title": "Game Rules",
            "content": "Each hit block captured by a player's ball gives him 100 points to his score and increases the ball's speed multiplier, however, if the opponent hits the wrong ball in his square, then 150 points are taken away. Each life is worth 1000 points, if the player loses one life then 1000 points go to the opponent's account, but if the player manages to keep them then 1000 points go to his account during the game summary."
          },
          {
            "title": "Control keys",
            "content": "<ol><li>Menu:<ul><li>Up Arrow - go up</li><li>Down Arrow - go down</li><li>Enter - Accept</li></ul></li><li>First Player:<ul><li>Up Arrow - start ball</li><li>Left Arrow - go left</li><li>Right Arrow - go right</li></ul></li><li>Second Player:<ul><li>S - start ball</li><li>A - go left</li><li>D - go right</li></ul></li><li>Pause:<ul><li>Escape - enter pause</li><li>Space - continue game</li><li>Enter - quit game</li></ul></li><li>Game:<ul><li>O - load game</li><li>P - save game</li></ul></li></ol>"
          },
          {
            "title": "Documentation",
            "content": "The documentation was generated using Doxygen version 1.9.1. It has been written in html format, a separate folder has been separated in the project for the content of the documentation and a separate folder for the source files of the Doxygen program.To run the documentation, you can install the doxygen program and upload the project to it. However, the simplest way is to go to html folder and open index.html like this: <strong>Blockball &gt; html &gt; index.html</strong>"
          },
          {
            "title": "Installation",
            "content": "The simplest way to run game is to open <i>BlockBall.exe</i> file. You can install that game on your computer. Installer is in installer folder <strong>intaller &gt;  Setup Files &gt;  BlockBall.exe</strong>"
          }
        ],
        "techStack": {
          "title": "Tech Stack",
          "stack": [
            "C++",
            "Allegro"
          ]
        },
        "authors": {
          "title": "Authors",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            },
            {
              "name": "@kwypych4 - Kamil Wypych",
              "link": "https://github.com/kwypych4"
            }
          ]
        },
        "links": {
          "title": "Visit",
          "links": [
            {
              "icon": "github",
              "content": "Visit repository on github",
              "url": "https://github.com/kondi171/BlockBall"
            }
          ]
        }
      },
      {
        "id": "Panzers1916",
        "name": "Panzers 1916",
        "representation": [
          {
            "title": "Description",
            "content": "A game based on Tank 1990 game released on pegasus. This project is a little bit different, because there is on co-operation, instead players fight each other."
          },
          {
            "title": "Game Rules",
            "content": "The board has been divided into 26 x 13 tiles, excluding black border. Players and their bullets can only move around fixed grid. For each player was reserved part of screen where is stats are displayed screen where his stats and player name are displayed. There are 4 types of blocks on the Board:<ul><li> Brick - A static destructible unit that can be obtained for 100 points for each hit and destruction, </li><li> Stone - Static and indestructible unit, </li><li> Water - A unit that only bullets can pass through, </li><li> Empty - A block that players can move freely on. </li></ul>Due to the Grid template, the player can only move in 4 directions, no indirect route possible. After firing the maximum number of bullets allowed in a burst (set to two begins a shot restriction - on the board can be a maximum of two shoots per player, when player reach limit, the next time he can fire only when there is a bullet collisionand the bullets will disappear from the board. Each player has 3 lives, each life taken from the opponent awards 1000 points to the player who managed to hit the opponent,and takes the life of the unit hit. For every hit destructible bricks, the player gets 100 points, which diversify the game and decide which player was better in a givengame. Every tank can fire two bullets in one burst. When the life of one of the players reaches zero - the game is over."
          },
          {
            "title": "Control keys",
            "content": "<ol><li>Menu:<ul><li>Up Arrow - go up</li><li>Down Arrow - go down</li><li>Enter - Accept</li></ul></li><li>First Player:<ul><li>W- go up</li><li>S - go down</li><li>A - go left</li><li>D - go right</li><li>Space - shoot</li></ul></li><li>Second Player:<ul><li> Up Arrow - go up</li><li> Down Arrow - go down</li><li> Left Arrow - go left</li><li> Right Arrow - go right</li><li> K - shoot</li></ul></li></ol>"
          },
          {
            "title": "Documentation",
            "content": "Whole documentation is in <strong>documentation</strong> folder after running <strong>index.html</strong> file."
          },
          {
            "title": "How to run?",
            "content": "First of all install a Java Runtime Environment (JRE) or Java Development Kit (JDK) in version above or equal 12! After that run Panzers 1916®.jar file. <br /><br />Download: <br /><br /><a href='https://www.java.com/pl/download/manual.jsp'>Java Runtime Environment</a> <br/> <a href='https://www.oracle.com/pl/java/technologies/downloads'>JavaDevelopment Kit </a><br/><strong>ATTENTION!</strong> Full screen does not work on some screens! Epilepsy warning!"
          }
        ],
        "techStack": {
          "title": "Tech Stack",
          "stack": [
            "Java",
            "Swing",
            "AWT"
          ]
        },
        "authors": {
          "title": "Authors",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            },
            {
              "name": "@kwypych4 - Kamil Wypych",
              "link": "https://github.com/kwypych4"
            }
          ]
        },
        "links": {
          "title": "Visit",
          "links": [
            {
              "icon": "github",
              "content": "Visit repository on github",
              "url": "https://github.com/kondi171/Panzers1916"
            }
          ]
        }
      },
      {
        "id": "MultiLines",
        "name": "Multi Lines",
        "representation": [
          {
            "title": "Description",
            "content": "Single Page Application implemented with React.js. Ready to use in local game. Multiplayer is not implemented yet."
          },
          {
            "title": "Game Rules",
            "content": "Game is played in 5 rounds. Survive as long as you can, the longer you are on the board, the more points you get. Dodge walls, own trails and other players. Smash your enemies, blocking their way. The player with the most points wins. Winner take everything!"
          },
          {
            "title": "Control keys",
            "content": "<ol><li>Red player:<ul><li>W - go up</li><li>S - go down</li><li>A - go left</li><li>D - go right</li></ul></li><li>Green player:<ul><li>Up Arrow - go up</li><li>Down Arrow - go down</li><li>Left Arrow - go left</li><li>Right Arrow - go right</li></ul></li><li>Blue player:<ul><li>I - go up</li><li>K - go down</li><li>J - go left</li><li>L - go right</li></ul></li><li>Yellow player:<ul><li>Num8 - go up</li><li>Num5 - go down</li><li>Num4 - go left</li><li>Num6 - go right</li></ul></li></ol>"
          },
          {
            "title": "How to run?",
            "content": "Visit deployment: <a href='https://multilines.netlify.app'>multilines.netlify.app</a> "
          }
        ],
        "techStack": {
          "title": "Tech Stack",
          "stack": [
            "HTML",
            "SCSS",
            "JavaScript",
            "React.js"
          ]
        },
        "authors": {
          "title": "Authors",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Visit",
          "links": [
            {
              "icon": "github",
              "content": "Visit repository on github",
              "url": "https://github.com/kondi171/MultiLines"
            },
            {
              "icon": "link",
              "content": "Visit website",
              "url": "https://multilines.netlify.app"
            }
          ]
        }
      },
      {
        "id": "CzasNaMasaz",
        "name": "Czas Na Masaż",
        "representation": [
          {
            "title": "Description",
            "content": "Website made commisioned by consumer for advertising his services in the field of massages. Website was implemented in two versions. One of them is with own mailing system implemented in PHP and the second one is with external mailing system - <strong>formspree.io</strong> which integrate mail with website form."
          },
          {
            "title": "How to run?",
            "content": "To run website with <strong>formspree.io</strong> mailing system - Visit deployment: <a href='https://czas-na-masaz.netlify.app'>czas-na-masaz.netlify.app</a>To run website with own mailing system:<li>Download localhost server hosting like <strong>XAMPP</strong> and run <strong>Apache server</strong> and <strong> MySQL</strong></li><li>Create in <strong>phpMyAdmin</strong> database <i>czasnamasaz</i>, next import to this database <i>czasnamasaz.sql</i> file which is in <strong>db</strong>  folder. File contains structure of tables </li><li>Go  to <i>_phpVersion</i> folder and paste content to main folder replacing <i>index.html</i> to <i>index.php</i></li><li>All project paste to <strong>htdocs</strong> folder in <strong>xampp</strong> folder </li><li>Db is empty if you want to login type <strong>localhost/php/adminlog.php</strong>, before it create login and password in <i>phpMyAdmin</i> in <i>admin</i> table</li><strong>IMPORTANT!</strong> Website is no more used by consumer, all website is under development."
          }
        ],
        "techStack": {
          "title": "Tech Stack",
          "stack": [
            "HTML",
            "CSS",
            "JavaScript",
            "PHP",
            "MySQL"
          ]
        },
        "authors": {
          "title": "Authors",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Visit",
          "links": [
            {
              "icon": "github",
              "content": "Visit repository on github",
              "url": "https://github.com/kondi171/CzasNaMasaz"
            },
            {
              "icon": "link",
              "content": "Visit website",
              "url": "https://czas-na-masaz.netlify.app"
            }
          ]
        }
      },
      {
        "id": "WebReview",
        "name": "Web Review",
        "representation": [
          {
            "title": "Description",
            "content": "Single Page Application created with React.js for frontend and PHP + MySQL for backend. Application in current version has a several movies which we can review."
          },
          {
            "title": "How to run?",
            "content": "Application in not full Web Service. To Open frontend visit deploy: Visit deployment: <a href='https://web-review.netlify.app'>web-review.netlify.app</a> To handle backend:<li>Download localhost server hosting like <strong>XAMPP</strong> and run <strong>Apache server </strong>and <strong>MySQL</strong></li><li>Create in <strong>phpMyAdmin</strong> database <i>webreview</i>, next import to this database <i>webreview.sql</i> file which is in <strong>db</strong> folder. File contains structure of tables and several examples of reviews. </li><li>Enjoy full app content! </li>"
          }
        ],
        "techStack": {
          "title": "Tech Stack",
          "stack": [
            "HTML",
            "SCSS",
            "JavaScript",
            "React.js",
            "PHP",
            "MySQL",
            "Bootstrap"
          ]
        },
        "authors": {
          "title": "Authors",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Visit",
          "links": [
            {
              "icon": "github",
              "content": "Visit repository on github",
              "url": "https://github.com/kondi171/WebReview"
            },
            {
              "icon": "link",
              "content": "Visit website",
              "url": "https://web-review.netlify.app"
            }
          ]
        }
      },
      {
        "id": "LazyTaste",
        "name": "Lazy Taste",
        "representation": [
          {
            "title": "Description",
            "content": "An engineering application as an intermediary system between restaurant and customer. System enabling ordering meals online. Customer system is supported by Artificial Intelligence, which will recommend gastronomic meals based on collected data. System was implemented on JavaScript engine supported by React.js framework for visual layer and business logic. Storage and segregation are supported by no-relational database - MongoDB. Implementation of backend is based on Node.js framework which support Javascript syntax."
          },
          {
            "title": "Artificial Neural Network",
            "content": "The client system was supported by the implementation of the Artificial Neural Network - Long Short Term Memory (LSTM),. It is a recursive type of neural network, which, unlike standard neural networks, has the possibility of feedback. The main advantage of this type of network is the ability to process both single data and sequences, including character strings, which are transferred to the training data, on the basis of which the result is predicted."
          },
          {
            "title": "Documentation",
            "content": "Documentation is an integral part of the engineering work protected by copyright. Documentation will be available only for individual request."
          },
          {
            "title": "How to run?",
            "content": "Visit deployment: <a href='https://lazytaste-frontend.onrender.com'> LazyTaste</a></br>API: </br><a href='https://lazytaste-backend.onrender.com/API/opinions'>Opinions database </a><a href='https://lazytaste-backend.onrender.com/API/customers'>Customers database </a><a href='https://lazytaste-backend.onrender.com/API/restaurants'>Restaurants database </a><a href='https://lazytaste-backend.onrender.com/API/lazy-assistant'> Lazy Assistant database</a> <strong>IMPORTANT!</strong> Due to the free hosting package, the speed of data exchange between frontend and backend is poor, patience is recommended :)"
          }
        ],
        "techStack": {
          "title": "Tech Stack",
          "stack": [
            "HTML",
            "SCSS",
            "JavaScript",
            "React.js",
            "Node.js",
            "Express.js",
            "MongoDB",
            "Mongoose",
            "Brain.js"
          ]
        },
        "authors": {
          "title": "Authors",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Visit",
          "links": [
            {
              "icon": "github",
              "content": "Visit repository on github",
              "url": "https://github.com/kondi171/LazyTaste"
            },
            {
              "icon": "link",
              "content": "Visit website",
              "url": "https://lazytaste-frontend.onrender.com"
            }
          ]
        }
      },
      {
        "id": "Portfolio",
        "name": "Portfolio",
        "representation": [
          {
            "title": "Description",
            "content": "Single Page Application implemented with React.js. Application describe me and represents my skills and projects."
          },
          {
            "title": "How to run?",
            "content": "You already here :)"
          }
        ],
        "techStack": {
          "title": "Tech Stack",
          "stack": [
            "HTML",
            "SCSS",
            "JavaScript",
            "React.js"
          ]
        },
        "authors": {
          "title": "Authors",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Visit",
          "links": [
            {
              "icon": "github",
              "content": "Visit repository on github",
              "url": "https://github.com/kondi171/Portfolio"
            },
            {
              "icon": "link",
              "content": "Visit website",
              "url": "https://konrad-nowak.netlify.app"
            }
          ]
        }
      }
    ]
  },
  "pl": {
    "title": "Projekty",
    "button": "Otwórz projekt",
    "projectSectionController": [
      "Poprzedni projekt",
      "Powrót do strony głównej",
      "Następny projekt"
    ],
    "projects": [
      {
        "id": "BlockBall",
        "name": "Block Ball",
        "representation": [
          {
            "title": "Opis",
            "content": "Gra umożliwiająca granie w trybie versus, a także przeciwko zaprogramowanemu komputerowi w różnych poziomach trudności. BlockBall został zaimplementowany w języku C++ z biblioteką Allegro 5."
          },
          {
            "title": "Zasady Gry",
            "content": "Każde uderzenie bloku przez piłkę gracza poszerza sumę punktów o 100, a także zwiększa mnożnik prędkości piłki, jednakże jeżeli przeciwnik uderzy swoją piłką o paletkę gracza, to zabierane mu jest 150 punktów. Każde życie warte jest 1000 punktów, jeżeli gracz straci życie to taka suma jest zabierana z wyniku gracza, jednak jeżeli uda mu się zachować dodatkowe życia, to 1000 punktów jest mnożone przez ilość pozostałych żyć i doliczane do wyniku końcowego. Utrata wszystkich żyć przez jednego z graczy wiąże się z końcem gry."
          },
          {
            "title": "Sterowanie",
            "content": "<ol><li>Menu:<ul><li>Strzałka w górę - przesuń kursor w górę</li><li>Strzałka w dół - przesuń kursor w dół</li><li>Enter - Zatwierdź</li></ul></li><li>Gracz pierwszy:<ul><li> Strzałka w górę - wypuść piłkę</li><li> Strzałka w lewo - przesuń paletkę w lewo</li><li> Strzałka w prawo - przesuń paletkę w prawo</li></ul></li><li>Gracz drugi:<ul><li>S - wypuść piłkę </li><li>A - przesuń paletkę w lewo </li><li>D - przesuń paletkę w prawo </li></ul></li><li>Pauza:<ul><li>Escape - włącz pauzę</li><li>Spacja - kontynuuj grę</li><li>Enter - wyjdź z gry</li></ul></li><li>Gra:<ul><li>O - załaduj poprzedni stan gry </li><li>P - zapisz stan gry </li></ul></li></ol>"
          },
          {
            "title": "Dokumentacja",
            "content": "Dokumentacja została wygenerowana z pomocą programu Doxygen w wersji 1.9.1. Została zapisana w formacie html w oddzielnym folderze, w którym znajdują się niezbędne pliki potrzebne do uruchomienia dokumentacji. Aby uruchomić dokumentacje można zainstalować program Doxygen i wgrać do niego projekt, najprościej jednak jest otworzyć folder html i otworzenie pliku index.html: <strong>Blockball &gt; html &gt; index.html</strong>"
          },
          {
            "title": "Instalacja",
            "content": "Najłatwiejszym sposobem uruchomienia projektu jest otwarcie pliku <i>BlockBall.exe.</i> Grę można jednak zainstalować, w tym celu należy podążać tą ścieżką: <strong>intaller &gt; Setup Files &gt; BlockBall.exe</strong>"
          }
        ],
        "techStack": {
          "title": "Stos Technologiczny",
          "stack": [
            "C++",
            "Allegro"
          ]
        },
        "authors": {
          "title": "Autorzy",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            },
            {
              "name": "@kwypych4 - Kamil Wypych",
              "link": "https://github.com/kwypych4"
            }
          ]
        },
        "links": {
          "title": "Odwiedź",
          "links": [
            {
              "icon": "github",
              "content": "Odwiedź repozytorium na Githubie",
              "url": "https://github.com/kondi171/BlockBall"
            }
          ]
        }
      },
      {
        "id": "Panzers1916",
        "name": "Panzers 1916",
        "representation": [
          {
            "title": "Opis",
            "content": "Gra wzorowana na klasycznej grze wydanej na Pegasusa - Tank 1990. Projekt ten różni się od pierwowzoru ponieważ nie ma w niej kooperacji, zamiast tego gracze prowadzą ze sobą rozgrywkę w trybie versus."
          },
          {
            "title": "Zasady Gry",
            "content": "Plansza została podzielona na kafelki 26 x 13, wykluczając czarne obramowanie. gracze oraz ich pociski, mogą poruszać się jedynie po ustalonej siatce. Dla każdego gracza zostało przydzielone miejsce na ekranie gdzie wyświetlają się jego statystyki oraz nazwa gracza. Na Planszy znajdują się 4 rodzaje bloków:<ul><li>Cegła - Statyczna do zniszczenia jednostka za którą można dostać 100 punktów za każde jej trafienie i zniszczenie, </li><li>Kamień - Statyczna i niezniszczalna jednostka, </li><li>Woda - Jednostka przez którą może przelecieć pocisk, natomiast gracz już nie, </li><li>Pusta - Blok po którym gracze, mogą poruszać się swobodnie. </li></ul>Dzięki Siatkowemu szablonowi, gracz może poruszać się tylko w 4 kierunkach, brak możliwości drogi pośredniej. Po wystrzeleniu maksymalnej dozwolonej ilości pocisków w serii (ustawiona na 2), następuje ograniczenie strzału, na planszy mogą znajdować się maksymalnie 2 pociski jednego gracza,  gdy osiągniemy limit, następny raz będziemy mogli wystrzeli dopiero gdy nastąpi kolizja pocisku i pocisk zniknie z planszy"
          },
          {
            "title": "Sterowanie",
            "content": "<ol><li>Menu:<ul><li> Strzałka w górę - poruszanie w górę</li><li> Strzałka w dół - poruszanie w dół</li><li>Enter - Zatwierdź</li></ul></li><li>Gracz pierwszy:<ul><li>W - poruszanie w górę</li><li>S - poruszanie w dół</li><li>A - poruszanie w lewo</li><li>D - poruszanie w prawo</li><li>Spacja - Strzał </li></ul></li><li>Gracz drugi:<ul><li>Strzałka w górę - poruszanie w górę</li><li>Strzałka w dół - poruszanie w dół</li><li>Strzałka w lewo - poruszanie w lewo</li><li>Strzałka w prawo - poruszanie w prawo</li><li>K - strzał</li></ul></li></ol>"
          },
          {
            "title": "Dokumentacja",
            "content": "Whole documentation is in <strong>documentation</strong> folder after running <strong>index.html</strong> file."
          },
          {
            "title": "Jak uruchomić?",
            "content": "Najpierw należy zainstalować maszynę wirtualną Javy (JRE) lub zestaw narzędzi programistycznych dla języka Java (JDK) w wersji powyżej 12! Następnie należyuruchomić plik Panzers 1916®.jar <br/>Pobierz: </br><a href='https://www.java.com/pl/download/manual.jsp'>Java Runtime Environment</a><br/><a href='https://www.oracle.com/pl/java/technologies/downloads'>Java Development Kit </a><br/><strong>Uwaga!</strong> Pełny ekran nie funkcjonuje poprawnie na niektórych ekranach! Ostrzeżenie o epilepsji!"
          }
        ],
        "techStack": {
          "title": "Stos Technologiczny",
          "stack": [
            "Java",
            "Swing",
            "AWT"
          ]
        },
        "authors": {
          "title": "Autorzy",
          "authors": [
            {
              "name": "@kondi171",
              "link": "https://github.com/kondi171"
            },
            {
              "name": "@kwypych4",
              "link": "https://github.com/kwypych4"
            }
          ]
        },
        "links": {
          "title": "Odwiedź",
          "links": [
            {
              "icon": "github",
              "content": "Odwiedź repozytorium na Githubie",
              "url": "https://github.com/kondi171/Panzers1916"
            }
          ]
        }
      },
      {
        "id": "MultiLines",
        "name": "Multi Lines",
        "representation": [
          {
            "title": "Opis",
            "content": "Aplikacja typu Single Page Application zaimplementowana w technologiach webowych. Gotowa do uruchomienia w trybie lokalnym. Tryb online nie został jeszcze zaimplementowany."
          },
          {
            "title": "Zasady Gry",
            "content": "Gra rozgrywa się przez 5 rund. Przetrwaj tak długo jak potrafisz, im dłużej znajdujesz się na planszy tym więcej punktów dostajesz. Unikaj ścian oraz szlaków, zarówno własnych jak i przeciwników. Niszcz wrogów blokując im drogę. Gracz z największą ilością punktów wygrywa. Wygrywający bierze wszystko!"
          },
          {
            "title": "Sterowanie",
            "content": "<ol><li>Gracz Czerwony:<ul><li>W - poruszanie w górę</li><li>S - poruszanie w dół</li><li>A - poruszanie w lewo</li><li>D - poruszanie w prawo</li></ul></li><li>Gracz Zielony:<ul><li>Strzałka w górę - poruszanie w górę</li><li>Strzałka w dół - poruszanie w dół</li><li>Strzałka w lewo - poruszanie w lewo</li><li>Strzałka w prawo - poruszanie w prawo</li></ul></li><li>Gracz Niebieski:<ul><li>I - poruszanie w górę</li><li>K - poruszanie w dół</li><li>J - poruszanie w lewo</li><li>L - poruszanie w prawo</li></ul></li><li>Gracz Żółty:<ul><li>Num8 - poruszanie w górę</li><li>Num5 - poruszanie w dół</li><li>Num4 - poruszanie w lewo</li><li>Num6 - poruszanie w prawo</li></ul></li></ol>"
          },
          {
            "title": "Jak uruchomić?",
            "content": "Odwiedź witrynę: <a href='https://multilines.netlify.app'> multilines.netlify.app</a>"
          }
        ],
        "techStack": {
          "title": "Stos Technologiczny",
          "stack": [
            "HTML",
            "SCSS",
            "JavaScript",
            "React.js"
          ]
        },
        "authors": {
          "title": "Autorzy",
          "authors": [
            {
              "name": "@kondi171",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Odwiedź",
          "links": [
            {
              "icon": "github",
              "content": "Odwiedź repozytorium na Githubie",
              "url": "https://github.com/kondi171/MultiLines"
            },
            {
              "icon": "link",
              "content": "Odwiedź witrynę",
              "url": "https://multilines.netlify.app"
            }
          ]
        }
      },
      {
        "id": "CzasNaMasaz",
        "name": "Czas Na Masaż",
        "representation": [
          {
            "title": "Opis",
            "content": "Strona internetowa wykonana na zlecenie klienta do ogłaszania jego usług w zakresie wykonywania masaży. Witryna została zaimplementowana w dwóch wersjach. Pierwsza z nich ma zaimplementowany własny system mailingowy napisany w języku PHP, a drugi wariant ma zaimplementowany zewnętrzny sytem mailingowy - <strong>formspree.io</strong>, który integruje skrzynkę mailową z formularzem na stronie."
          },
          {
            "title": "Jak uruchomić?",
            "content": "Aby uruchomić stronę internetową z systemem mailingowym <strong>formspree.io</strong> - odwiedź witrynę: <a href='https://czas-na-masaz.netlify.app'>czas-na-masaz.netlify.app</a> <br/>Aby uruchomić witryne z własnym systemem mailingowym należy:<li>Zainstalować hostujący serwer lokalny np. <strong>XAMPP</strong> i uruchomić w nim <strong>Apache server</strong> oraz <strong>MySQL</strong></li><li>Stworzyć w phpMyAdmin bazę danych o nazwie <i>czasnamasaz</i>, następnie zaimportować bazę danych z pliku <i>czasnamasaz.sql</i>, który znajduje się w folderze<strong>db</strong>. Plik ten zawiera struktury tabel</li><li>Otwórz folder <i>_phpVersion</i> skopiuj i wklej zawartość folderu do folderu głównego, zamieniając przy tym <i>index.html</i> na <i>index.php</i></li><li>Cały projekt wklej do folderu <strong>htdocs</strong> w folderze <strong>xampp</strong></li><li>Baza danych jest pusta, jeżeli chcesz się zalogować wpisz w URL: <strong>localhost/php/adminlog.php</strong>, przed tym jednak stwórz swój login i hasło w <i>phpMyAdmin</i> w tabeli <i>admin</i></li><strong>WAŻNE!</strong>Strona internetowa nie jest już używana przez klienta. Cała witryna jest na etapie developerskim."
          }
        ],
        "techStack": {
          "title": "Stos Technologiczny",
          "stack": [
            "HTML",
            "CSS",
            "JavaScript",
            "PHP",
            "MySQL"
          ]
        },
        "authors": {
          "title": "Autorzy",
          "authors": [
            {
              "name": "@kondi171",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Odwiedź",
          "links": [
            {
              "icon": "github",
              "content": "Odwiedź repozytorium na Githubie",
              "url": "https://github.com/kondi171/BlockBall"
            },
            {
              "icon": "link",
              "content": "Odwiedź witrynę",
              "url": "https://github.com/kondi171/BlockBall"
            }
          ]
        }
      },
      {
        "id": "WebReview",
        "name": "Web Review",
        "representation": [
          {
            "title": "Opis",
            "content": "Aplikacja typu SPA zaprojektowana za pomocą React.js po stronie frontendu oraz PHP + MySQL po stronie backendu i obsługi bazy danych. Aplikacja w aktualnej wersji posiada kilka filmów, które możemy ocenić."
          },
          {
            "title": "Jak uruchomić?",
            "content": "Aplikacja nie jest pełnym Web Serwisem. Aby otworzyć frontend odwiedź witrynę: <a href='https:// https://web-review.netlify.app'> webreview.netlify.app</a> <br/>Aby witryna obsłużyła również backend należy: <li>Zainstalować hostujący serwer lokalny np. <strong>XAMPP</strong> i uruchomić w nim <strong>Apache server</strong> oraz <strong>MySQL</strong></li><li>Stworzyć w <strong>phpMyAdmin</strong> bazę danych o nazwie <i>webreview</i>, następnie zaimportować bazę danych z pliku <i>webreview.sql</i>, który znajduje się w folderze <strong>db</strong>. Plik ten zawiera struktury tabel oraz kilka przykładow recenzji. </li><li>Ciesz się pełną zawartością aplikacji! </li>"
          }
        ],
        "techStack": {
          "title": "Stos Technologiczny",
          "stack": [
            "HTML",
            "SCSS",
            "JavaScript",
            "React.js",
            "PHP",
            "MySQL",
            "Bootstrap"
          ]
        },
        "authors": {
          "title": "Autorzy",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Odwiedź",
          "links": [
            {
              "icon": "github",
              "content": "Odwiedź repozytorium na Githubie",
              "url": "https://github.com/kondi171/WebReview"
            },
            {
              "icon": "link",
              "content": "Odwiedź witrynę",
              "url": "https://web-review.netlify.app"
            }
          ]
        }
      },
      {
        "id": "LazyTaste",
        "name": "Lazy Taste",
        "representation": [
          {
            "title": "Opis",
            "content": "Aplikacja inżynierska jako system pośredniczący pomiędzy restauracją a klientem, umożliwiający zamawianie posiłków online. System kliencki wspierany jest przez Sztuczną Inteligencję, która za zadanie ma rekomendowanie posiłków gastronomicznych na podstawie zebranych danych z zamówień klienta. System został zaimplementowany w języku JavaScript wraz z biblioteką React.js dla warstwy wizualnej oraz logiki biznesowej. Za przechowywanie oraz segregację danych odpowiada nierelacyjna baza danych - MongoDB. Do obsługi bazy danych wykorzystana została backendowa implementacja JavaScript'u - Node.js."
          },
          {
            "title": "Sztuczna Sieć Neuronowa",
            "content": "System kliencki został wsparty o implementacje Sztucznej Sieci Neuronowej - Long Short Term Memory (LSTM) czyli długoterminowa pamięć krótkoterminowa. Jest to rekurencyjny typ sieci neuronowej, który w odróżnieniu od standardowych sieci neronowych ma możliwość sprzężenia zwrotnego. Główną zaletą tego typu sieci jest możliwość przetwarzania zarówno pojedynczych danych jak i sekwencji w tym ciągów znaków, które są przekazywane do danych uczących, na podstawie których jest przewidywany wynik."
          },
          {
            "title": "Dokumentacja",
            "content": "Dokumentacja stanowi nieodłączną część pracy inżynierskiej chroniącej przez prawa autorskie. Dokumentacja zostanie udostępniona na indywidualną prośbę. "
          },
          {
            "title": "Jak uruchomić?",
            "content": "Odwiedź witrynę: <a href='https://lazytaste-frontend.onrender.com'> LazyTaste</a></br>API: </br><a href='https://lazytaste-backend.onrender.com/API/opinions'>Baza opinii</a><a href='https://lazytaste-backend.onrender.com/API/customers'>Baza klientów</a><a href='https://lazytaste-backend.onrender.com/API/restaurants'>Baza restauracji</a><a href='https://lazytaste-backend.onrender.com/API/lazy-assistant'>Baza leniwego asystenta</a> <strong>WAŻNE!</strong> Z powodu darmowego pakietu hostującego, prędkość wymiany danych pomiędzy frontendem a backendem jest uboga, zalecana cierpliwość :) "
          }
        ],
        "techStack": {
          "title": "Stos Technologiczny",
          "stack": [
            "HTML",
            "SCSS",
            "JavaScript",
            "React.js",
            "Node.js",
            "Express.js",
            "MongoDB",
            "Mongoose",
            "Brain.js"
          ]
        },
        "authors": {
          "title": "Autorzy",
          "authors": [
            {
              "name": "@kondi171",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Odwiedź",
          "links": [
            {
              "icon": "github",
              "content": "Odwiedź repozytorium na Githubie",
              "url": "https://github.com/kondi171/LazyTaste"
            },
            {
              "icon": "link",
              "content": "Odwiedź witrynę",
              "url": "https://lazytaste-frontend.onrender.com/"
            }
          ]
        }
      },
      {
        "id": "Portfolio",
        "name": "Portfolio",
        "representation": [
          {
            "title": "Opis",
            "content": "Aplikacja typu SPA zaimplementowana za pomocą React.js. Aplikacja opisuje mnie oraz reprezentuje moje umiejętności oraz projekty."
          },
          {
            "title": "Jak uruchomić?",
            "content": "Właśnie tutaj jesteś :)"
          }
        ],
        "techStack": {
          "title": "Stos Technologiczny",
          "stack": [
            "HTML",
            "SCSS",
            "JavaScript",
            "React.js"
          ]
        },
        "authors": {
          "title": "Autorzy",
          "authors": [
            {
              "name": "@kondi171 - Konrad Nowak",
              "link": "https://github.com/kondi171"
            }
          ]
        },
        "links": {
          "title": "Odwiedź",
          "links": [
            {
              "icon": "github",
              "content": "Odwiedź repozytorium na Githubie",
              "url": "https://github.com/kondi171/Portfolio"
            },
            {
              "icon": "link",
              "content": "Odwiedź witrynę",
              "url": "https://konrad-nowak.netlify.app"
            }
          ]
        }
      }
    ]
  }
}